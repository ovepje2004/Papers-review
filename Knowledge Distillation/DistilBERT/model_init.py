# -*- coding: utf-8 -*-
"""model_init.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k7o8duMhzkcMjdEMn2LeaOZ6amPLp1_X
"""

from transformers import BertModel, BertConfig
import torch.nn as nn
import copy

def student_Architecture(teacher, num_student_layers):
  config = copy.deepcopy(teacher.config)
  config.num_hidden_layers = num_student_layers
  config.type_vocab_size = 1
  student = BertModel(config)

  teacher_layers = teacher.encoder.layer
  student_layers = student.encoder.layer

  for i in range(num_student_layers):
    student_layers[i].load_state_dict(teacher_layers[i*2].state_dict())

  #student.embeddings.load_state_dict(teacher.embeddings.state_dict())
  student.embeddings.word_embeddings.load_state_dict(teacher.embeddings.word_embeddings.state_dict())
  student.embeddings.position_embeddings.load_state_dict(teacher.embeddings.position_embeddings.state_dict())
  student.embeddings.LayerNorm.load_state_dict(teacher.embeddings.LayerNorm.state_dict())

  student.embeddings.token_type_embeddings = nn.Embedding(1, config.hidden_size)

  return student